/*******************************************************************************
* Instrument: <instrument name>
*
* %I
* Written by: <your name (email)>
* Date: <current date>
* Origin: <your institution>
* %INSTRUMENT_SITE: Templates
*
* <instrument short description>
*
* %D
* <instrument description>
*
* Example: <parameters=values>
*
* %P
* <parameter1>: [<unit>] <parameter1 description>
* ...
*
* %L
* <reference/HTML link>
*
* %E
*******************************************************************************/
DEFINE INSTRUMENT template_simple(
    det_width = 0.218,
    det_width_focus = 0.03,
    source_width = 0.03,
    guide_width = 0.218,
    L_source = 5,
    guide_length = 160,
    dL = 3,
    L_min = 2,
    L_max = 8,
    source_divergence = 2.5,
    divergence_max = 1,
    focal_length = 6,
    mirrors = 60,
    incoming_length = 5000,
    g = -9.81,
    max_div = 10,
    pixels = 100,
    flux = 1,
    placeholder = 1)

DECLARE
%{
%}

INITIALIZE
%{
%}

TRACE

COMPONENT origin = Progress_bar()
AT (0, 0, 0) RELATIVE ABSOLUTE

// insert components here (e.g. Insert -> Source -> ...)
COMPONENT source = Arm()
AT (0, 0, 0) RELATIVE PREVIOUS

COMPONENT source_div = Source_div(
    yheight=source_width,
    xwidth=source_width,
    //dist=3,
    focus_aw=source_divergence,//source_divergence,//maximum divergence horizontal0.000000001,//
    focus_ah=source_divergence,//guide_width,0.000000001,//
    lambda0=L_source,
    flux=flux,
    dlambda=dL)
AT (0, 0, 0) RELATIVE source

COMPONENT slit = Slit(
    radius=source_width/2
)
AT (0, 0, 0) RELATIVE source

COMPONENT psd_monitor_source = PSD_monitor(
    filename="source_psd.dat",
    xwidth=det_width,
    yheight=det_width,
    nx=pixels,
    ny=pixels,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE source

COMPONENT psd_monitor_source_before_optic = PSD_monitor(
    filename="source_psd_beforeoptic.dat",
    xwidth=0.10815692497298013*2,
    yheight=0.10815692497298013*2,
    nx=pixels,
    ny=pixels,
    restore_neutron=1)
AT (0, 0, focal_length-0.6) RELATIVE source

//------------------------------------ Before the guide 2 d defocusing

COMPONENT parabolic_optic_before_guide_v = FlatEllipse_finite_mirror(
    sourceDist=-(focal_length-0.6),
    LStart=-(focal_length-0.6),
    LEnd=incoming_length+0.6,
    lStart=0,
    lEnd=0.6,
    r_0 = 0.10815692497298013,//calculated such that the exit of the optic fits the guide width
    mirror_width = 0,//0.15 mm
    nummirror = mirrors,
    doubleReflections=1,
    mf = 4.1,
    mb = 0
)
WHEN (placeholder>0)
AT (0, 0, focal_length-0.6) RELATIVE source
ROTATED (0, 0, 0) RELATIVE source


COMPONENT parabolic_optic_before_guide_h = FlatEllipse_finite_mirror(
    sourceDist=-focal_length,
    LStart=-focal_length,
    LEnd=incoming_length,
    lStart=0,
    lEnd=0.6,
    r_0 = 0.1087016643197862,//calculated such that the exit of the optic fits the guide width
    mirror_width = 0,//0.15 mm
    nummirror = mirrors,
    doubleReflections=1,
    mf = 4.1,
    mb = 0
)
WHEN (placeholder>0)
AT (0, 0, focal_length) RELATIVE source
ROTATED (0, 0, 90) RELATIVE source

// ----------------------------------- Checking the output from the guide

COMPONENT after_optic_source = Arm()
AT (0, 0, focal_length+1) RELATIVE source

COMPONENT psd_monitor_afteropticsource = PSD_monitor(//PSD looking at the beam behind the guide
    filename="sourceafteroptic_psd.dat",
    xwidth=det_width,
    yheight=det_width,
    nx=pixels,
    ny=pixels,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE after_optic_source

// ----------------------------------- Long guide with gravvity

COMPONENT guide_gravity_1 = Guide_gravity(
    w1=guide_width,
    h1=guide_width,
    G=g,
    m=2,
    l=guide_length)
AT (0, 0, 0) RELATIVE after_optic_source

COMPONENT monitor_0_1 = Arm()
AT (0, 0, guide_length+0.0001) RELATIVE after_optic_source

//---------------------------------------- Collimator for testing ---------------------------------------

//COMPONENT collimator_linear = Collimator_linear(
//    xmin=-guide_width/2,
//    xmax=guide_width/2,
//    ymin=-guide_width/2,
//    ymax=guide_width/2,
//    length=0.2,
//    divergence=max_div,
//    divergenceV=max_div)
//AT (0, 0, 0) RELATIVE monitor_0_1



COMPONENT monitor_1 = Arm()
AT (0, 0, 0.2001) RELATIVE monitor_0_1

//COMPONENT divpos_monitor = DivPos_monitor(
//    nh=100,
//    ndiv=100,
//    filename="g1_divpos.dat",
//    xwidth=det_width,
//    yheight=det_width,
//    maxdiv_h=divergence_max*2,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_1
//ROTATED (0, 0, 90) RELATIVE monitor_1

//COMPONENT divvlambda_monitor_g = DivLambda_monitor(
//    nL=50,
//    nh=50,
//    filename="divv_lambda_guide.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    maxdiv_h=divergence_max,
//    Lmin=L_min,
//    Lmax=L_max,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_1
//ROTATED (0, 0, 0) RELATIVE monitor_1
//
//COMPONENT divhlambda_monitor_g = DivLambda_monitor(
//    nL=50,
//    nh=50,
//    filename="divh_lambda_guide.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    maxdiv_h=divergence_max,
//    Lmin=L_min,
//    Lmax=L_max,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_1
//ROTATED (0, 0, 00) RELATIVE monitor_1
//
//
//COMPONENT l_monitor_g1 = L_monitor(
//    filename="g1_l.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    Lmin=L_min,
//    Lmax=L_max,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_1
//
//COMPONENT divergence_monitor_g1 = Divergence_monitor(
//    filename="g1_divergence.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    maxdiv_h=divergence_max,
//    maxdiv_v=divergence_max,
//    nh =pixels,
//    nv =pixels,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_1
//there is a new babao in town

//and now i finally understood git compare in vs code i thoought
COMPONENT psd_monitor_g1 = PSD_monitor(
    filename="g1_psd.dat",
    xwidth=det_width,
    yheight=det_width,
    nx=pixels,
    ny=pixels,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE monitor_1

COMPONENT divhlambda_monitor_g1 = DivLambda_monitor(
    nL=100,
    nh=100,
    filename="g1_divv_lambda.dat",
    xwidth=det_width,
    yheight=det_width,
    maxdiv_h=divergence_max*2,
    Lmin=L_min,
    Lmax=L_max,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE monitor_1
ROTATED (0, 0, 90) RELATIVE monitor_1



//----------------------------------------- Parabolic optic --------------------------------------------

COMPONENT parabolic_optic1 = FlatEllipse_finite_mirror(
    sourceDist=-incoming_length,
    LStart=-incoming_length,
    LEnd=focal_length+0.6,
    lStart=0,
    lEnd=0.6,
    r_0 = guide_width/2+0.005,
    mirror_width = 0,//0.15 mm
    nummirror = mirrors,
    doubleReflections=1,
    mf = 4.1,
    mb = 0
)
WHEN (placeholder>0)
AT (0, 0, 0) RELATIVE monitor_1
ROTATED (0, 0, 90) RELATIVE monitor_1

COMPONENT parabolic_optic2 = FlatEllipse_finite_mirror(
    sourceDist=-incoming_length-0.6,
    LStart=-incoming_length-0.6,
    LEnd=focal_length,
    lStart=0,
    lEnd=0.6,
    r_0 = guide_width/2+0.005,
    mirror_width = 0,//0.15 mm
    nummirror = mirrors,
    doubleReflections=1,
    mf = 4.1,
    mb = 0
)
WHEN (placeholder>0)
AT (0, 0, 0.6) RELATIVE monitor_1
ROTATED (0, 0, 0) RELATIVE monitor_1


//---------------------------------------- Monitor set in the focal point ----------------------------------

COMPONENT monitor_2 = Arm()
AT (0, 0, focal_length+0.6) RELATIVE monitor_1
ROTATED (0, 0, 0) RELATIVE monitor_1


//COMPONENT divvlambda_monitor_f = DivLambda_monitor(
//    nL=50,
//    nh=50,
//    filename="divv_lambda_focal.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    maxdiv_h=divergence_max,
//    Lmin=L_min,
//    Lmax=L_max,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_2
//ROTATED (0, 0, 0) RELATIVE monitor_2
//
//COMPONENT divhlambda_monitor_f = DivLambda_monitor(
//    nL=50,
//    nh=50,
//    filename="divh_lambda_focal.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    maxdiv_h=divergence_max,
//    Lmin=L_min,
//    Lmax=L_max,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_2
//ROTATED (0, 0, 00) RELATIVE monitor_2
//
//
//COMPONENT l_monitor_f = L_monitor(
//    filename="f_l.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    Lmin=L_min,
//    Lmax=L_max,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_2
//
//COMPONENT divergence_monitor_f = Divergence_monitor(
//    filename="f_divergence.dat",
//    xmin=-det_width/2,
//    xmax=det_width/2,
//    ymin=-det_width/2,
//    ymax=det_width/2,
//    maxdiv_h=divergence_max,
//    maxdiv_v=divergence_max,
//    nh =pixels,
//    nv =pixels,
//    restore_neutron=1)
//AT (0, 0, 0) RELATIVE monitor_2
//
COMPONENT psd_monitor_f_zoom = PSD_monitor(
    filename="f_psd_zoom.dat",
    xwidth=det_width_focus,
    yheight=det_width_focus,
    nx=pixels,
    ny=pixels,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE monitor_2
ROTATED (0, 0, 0) RELATIVE monitor_2

COMPONENT psd_monitor_f = PSD_monitor(
    filename="f_psd.dat",
    xwidth=det_width,
    yheight=det_width,
    nx=pixels,
    ny=pixels,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE monitor_2
ROTATED (0, 0, 0) RELATIVE monitor_2

COMPONENT f_divpos = DivPos_monitor(//this should be a monitor vertical position vs. vertical direction
    nh=100,
    ndiv=100,
    filename="f_divpos.dat",
    xwidth=det_width_focus,//det_width,
    yheight=det_width_focus,//det_width,
    maxdiv_h=divergence_max*2,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE monitor_2
ROTATED (0, 0, 90) RELATIVE monitor_2

COMPONENT divhlambda_monitor_f = DivLambda_monitor(
    nL=100,
    nh=100,
    filename="f_divv_lambda.dat",
    xwidth=det_width_focus,
    yheight=det_width_focus,
    maxdiv_h=divergence_max*2,
    Lmin=L_min,
    Lmax=L_max,
    restore_neutron=1)
AT (0, 0, 0) RELATIVE monitor_2
ROTATED (0, 0, 90) RELATIVE monitor_2


FINALLY
%{
%}

END
